1, Mô hình web client - server
    - web app - server return data
    - web view - server return html view + data 
API application programing interface
----------------
2, Express js là 1 framework của Nodejs 
- Advanteages: 
    + Stability (ổn định)
    + Community (cộng đồng)
    + Understandable (dễ hiểu)
Một số framework liên quan: Hapijs, Koa, Adonis (cấu hình giống laravel), totaljs (bên IOT), ... Nestjs (mới)
Hầu hêt các framework sau này đều dùng nhân từ Expressjs
Một số framework k dùng Expressjs làm nhân 

- Disadavantages (nhực điểm)
 + Weak security (bảo mật k cao)
 + Warting time 
 + Performance - benchmark (so sánh công nghệ )
Install JSON format chrome

3, code 
 - 200: success
 - 404: not found 
 - 401: not authorization 
 - 400: return bad request 
4, Với mỗi request thì chỉ có 1 response : lỗi 
5, RESTful API
    1, Chuẩn Method: GET, POST, PUT, PATCH, DELETE
        - GET: Getting data from server.
        - POST: Create new data to server.
        - PUT: Update existing data to server. PUT (UPDATE): Cập nhật thông tin cho Resource.
        - PATCH: Update existing data to server. PATCH (UPDATE): Cập nhật một thành phần, thuộc tính của Resouce.
    2, Naming API: Cách đặt tên 
        - naming api: ex: /say-hello 

    3, Versioning API: ex: /api/v1/say-hello

    4, Http status code 
        https://www.restapitutorial.com/httpstatuscodes.html
    
    CRUD => Create Read Update Delete
*****-----******
BT 
1. POST /api/v1/users
    Create new user to user.json file.

2. GET /api/v1/users
    Get list of user from user.json file.

3. PUT /api/v1/users/:id
    Update one user by the given id in user.json file.

4. DELETE /api/v1/users/:id
    Delete one user by the given id in user.json file.

5. GET /api/v1/users/:id
    Get info of one user by the given id